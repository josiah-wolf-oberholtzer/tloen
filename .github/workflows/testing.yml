name: Testing
on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
env:
  MYPYPATH: /tmp/typehints
  SC_ORIGIN: https://github.com/supercollider/supercollider.git
  SC_BRANCH: Version-3.10.0
jobs:
  testing:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Supriya
      run: |
        pip install -e .
        python -c "import supriya"
        pip install -e .[cython,ipython,test]
    - name: Get Type Hints
      run: |
        pip install --target /tmp/typehints --no-deps uqbar
        pip install --target /tmp/typehints --no-deps https://github.com/josiah-wolf-oberholtzer/supriya/archive/master.zip
    - name: Run Black
      run: |
        make black-check
    - name: Run Flake8
      run: |
        make flake8
    - name: Run Mypy
      run: |
        make mypy
    - name: Clone SC
      run: |
        git clone ${SC_ORIGIN} /tmp/supercollider
        cd /tmp/supercollider
        git checkout ${SC_BRANCH}
        git submodule -q init
        git submodule -q update
        mkdir BUILD
        echo "SC_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "SC_ORIGIN_MD5=$(echo ${SC_ORIGIN} | md5sum | head -c 7)" >> $GITHUB_ENV
    - name: Cache SC
      id: cache
      uses: actions/cache@v2
      with:
        path: /tmp/supercollider
        key: supercollider-${{ runner.os }}-${{ env.SC_ORIGIN_MD5 }}-${{ env.SC_COMMIT_SHA }}
    - name: Install Deps
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get clean
        sudo apt-get update
        sudo apt-get install --yes \
          alsa-oss \
          alsa-utils \
          build-essential \
          cmake \
          espeak \
          ffmpeg \
          jackd2 \
          lame \
          libasound2-dev \
          libavahi-client-dev \
          libfftw3-dev \
          libicu-dev \
          libjack-jackd2-dev \
          libreadline6-dev \
          libsndfile1-dev \
          libudev-dev \
          libxt-dev \
          pkg-config
    - name: Build SC
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cmake --debug-output -DCMAKE_BUILD_TYPE=Release -DSC_EL=OFF -DSC_IDE=OFF -DSC_QT=OFF /tmp/supercollider > /dev/null
        make
      working-directory: /tmp/supercollider/BUILD
    - name: Install SC
      run: |
        sudo make install
      working-directory: /tmp/supercollider/BUILD
    - name: Sanity-check SC
      run: |
        scsynth -v
    - name: Setup Jack
      run: |
        sudo usermod -a -G audio ${USER}
        sudo -E su ${USER} -c "jackd -r -ddummy -r44100 -p1024" &
        sleep 5
        sudo -E su $USER -c "scsynth -D 0 -H dummy -R 0 -u 57110" &
        sleep 5
        killall scsynth
    - name: Run Pytest
      run: |
        pytest
